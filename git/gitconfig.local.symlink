[user]
    email = metcalfc@gmail.com
    name = Chad Metcalf

[alias]
    # branch
    b = branch -v
    br = branch
    bdiff = !bash -c 'git diff $(git merge-base "$1" "$2") "$2" "${@: 3}" ' -
    blog = !bash -c 'git log $(git merge-base "$1" "$2").."$2"' -
    bclean = !bash -c 'git fetch --prune && git branch -d $(git branch --merged=master | grep -v master)'

    # checkout
    co = checkout
    
    # dco signoff
    dco = config --add format.signOff true

    # fetch
    f = fetch --all --prune --tags

    # log
    incoming = log ..origin/master
    last = log -1 HEAD
    # To see what new commits have been created by the last command (typically after a "git pull") :
    # Use like
    #   git pull
    #   git new
    #   git new origin/master

    # rebase
    rem = rebase origin/HEAD
    reu = rebase upstream/HEAD

    # remote
    r = remote -v                     # show remotes (verbose)
    prune-all = !git remote | xargs -n 1 git remote prune # prune stale branches

    # status
    s = status
    st = status

    # reset
    unstage = reset HEAD              # remove files from index (tracking)
    uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
    undo = reset --soft HEAD^

[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto
    ui = true